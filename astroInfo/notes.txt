# Notes on Anomalous Asteroid Detection Program
# Programmer: Savannah Chappus
# Last Update: 7.28.2024

# FUNCTION & USAGE
########################################################################################
# The program accepts a number of asteroids to observe and value for where in the data #
# to start. Then, it pulls data for each individual asteroid, and finds the most       #
# outlying point (min or max) and calculates the number of standard deviations away    #
# from the mean that point is. If it is above the mean, the number of sigmas is stored #
# in the matrix. If it is below the mean, the negative number of sigmas is stored in   #
# the matrix. The final columns in the matrix are a row sum (of sigma multipliers), a  #
# row sum of the absolute value of each matrix entry, and a numeric rating depicting   #
# the chance that the asteroid is anomalous based on the algorithm. The algorithm      #
# takes data for each attribute, normalizes it to the range [0, 1], then calculates    #
# each individual observation's rating based on the optimum values for each attribute. #
# The program then allows users to filter the data by features at specific user-given  #
# values. Then users can view histograms of all the sigma data and scatterplots for    #
# individual asteroids.                                                                #
########################################################################################


# CURRENT ERRORS & WARNINGS
########################################################################################
  ERROR 1: in formatDataTable(...), the formatting for the data when there is only one
  asteroid input only works when called from viewOne(), not when runProgram() is ran
  with only 1 asteroid. This is because of how the data is formatted when passed into
  the function.

  WARNING 1: in runProgram(), the line that drops all rows with 0 in them may not work
  with the new algorithm because the new algorithm doesn't assign zeros in place of
  data. Alternatively, it may still be fine since there are no zeros in the matrix then

  ERROR 2: In viewOne(), clearing the antIDS list works fine while the program runs but
  causes an error only upon exiting the program. I am not sure why.

  
# FUTURE WORK
########################################################################################
	- exchange error msgs following recieving an empty filter set with sys.stderr so that there are no prompts during program runtime
	- change use msg and move all help stuff to a README
	- work on adapting detection algorithm to be more accurate
    - compare multiple attributes at once rather than just highest/lowest outliers overall
  - work on adapting program to work on incoming stream of data, not just set data

  - give users option to download table or view table
  - give users option to filter table like when viewing all data

  - add weighted system to current rating algorithm
  - add prompt for exporting dataplots or viewing dataplots (rather than just sigma matrix)
  - improve algorithm by incorporating more conditions to the rating like
    - if x and x happen right after x happens, then boost the rating by __%
  - remove all references to 'night'
  - continue running profiler and evaluating efficiency until it seems to be the best it can be
  	- make it so that the mag18data is converted to a locally stored dataframe as soon as possible,
	  then reference it in other places as a dataframe.
  - add config file to gitignore with connection details to keep them secret
  - add secondary filtering with sliding observation window (first 5 then over by 1 then again...)
  - allow users to pick and choose which attributes to include
  - make several copies of the run with different filter values
  - check against SNAPS database light curves :)

  - Colin Chandler list of asteroids
  - make 3D and 2D plots
  - make plot of all observation scores
  	- should look like a little zig zag and maybe spikes every once in a while


# NOTES ON ALGORITHM
########################################################################################
For each attribute (rb, elong, mag18omag8, H) the data is sorted, the min and max values
are retrieved, and the data is normalized to the range [0, 1]. Then, each point in the
set is 'ranked' and added to the total rating based on the desired value of each
attribute. For example, once data is normalized to [0, 1], a value of .3 will have a
'ranking' of .3, or 30%. If the attribute is ideal when it's as high as possible, this
ranking will be added to the rating as it's complement, ie. .7 or 30%, otherwise it will
be added as it's face value. This allows for the algorithm to get a night with a 100%
rating when each of the 4 attributes is in its ideal condition. 

Currently Used Attributes and Meanings
RB:
    Good = value of 1
    Interesting if value is generally mediocre then spikes in "accuracy"
    Intersting if value is generally high then dips in "accuracy"
    Algorithm uses: rb minimal for 100% score.

ELONG:
    Value of 1 is perfect circle, value greater than 1 is more elongated
    Interesting if if value is high
    Algorithm uses: elong maximal for 100% score

H:
    Normalized to phaseangle
    Lower value = brighter
    Higher value = dimmer
    Algorithm uses: H minimal for 100% score

MAG18OMAG8:
    Good = value closer to zero
    Interesting if the number of sigmas is high (away from zero)
    Not as interesting if magpsf or H are also lower values (brighter)
    Algorithm uses: mag18omag8 maximal for 100% score
       

Potentially Interesting Asteroids:
* 99928
* 9937
* 99970
* 99936
* 98726
* 990 (on Erin's list - color changer)
* 9219 (on Erin's list)

Asteroids from Erin:
* 8021

Known Active Asteroids:
* 6478 (Gault)
* 3200 (Phaethon)
* 2060 (Chiron)
* 1269
* 1279
* 410590
* 551023
* 248370
